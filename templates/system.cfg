# Core config file that creates system wide (font-sources) useful strings
#
# 0.1   MJPH     7-DEC-2007     Original

# create a list of FONTS from FONTFACES and FONTSTYLES
FONTS |=$(foreach f,$(FONTFACES),$(foreach s,$(FONTSTYLES),$(f)$(map $(s),regular,,bold,bold,light,light,italic,italic,bolditalic,bolditalic)))
FONT_VARS=$(!foreach v,$(FONTS),$(FONTVARS))

# various commands and their representation in various OSs
TAR_Win32=<<EOT
	-$(RM) $@
	7za a -ttar temp.tar @MANIFEST
	7za a -tgzip $@ temp.tar
	-$(RM) temp.tar
EOT
COMMANDS_MSWin32=<<EOT
RM|=perl -MExtUtils::Command -e rm_rf
CP|=perl -MExtUtils::Command -e cp
GRCOMPILER|='"C:\Program Files\SIL\GrCompiler\GrCompiler.exe"'
TARUP|=$(TAR_Win32)
EOT

COMMANDS_linux=<<EOT
RM|=rm
CP|=cp
GRCOMPILER|=grcompiler
TARUP|=tar cvzf $@ -T MANIFEST
EOT
$(!foreach v,dummy,$(COMMANDS_$(.OS)))

# standard files to include in MANIFEST
MANIFEST=<<EOT
$($(v)_SRC)
$($(v)_TARGET)
$($(v)_GDL)
$($(v)_VTP)
$($(v)_AP)
EOT

# appropriate files in the doc dir (and doc is fixed) are included and get
# menu items. Notice we don't include the doc/ in the list
DOCS|=$(dir doc,\.pdf$,\.txt$,\.html$)

# fallback name for project configuration file. A guess
CONFIG_FILE|=config.cfg

# Command to regenerate build tree from templates
AUTOSUB|=perl templates/autosub -c $(CONFIG_FILE) -c templates/system.cfg -d . -x .cfg -x \~ -x autosub -x .svn -x .dll templates

# Calculate a x.y.z.w style version number for windows installers
WINDOWS_MATCH=^\d+\.\d+\.\d+\.\d+
BUILD|=1
VERSION|=0
WINDOWS_VERSION|=$(or $(match $(VERSION),$(WINDOWS_MATCH)),$(match $(VERSION).$(BUILD),$(WINDOWS_MATCH)), $(match $(VERSION).0.$(BUILD),$(WINDOWS_MATCH)), $(VERSION).0.0.$(BUILD))

# various make templates for smart font building
# VOLT. Set MAKE_VOLT to override. Rules only added if $(f)_VTP is set which is where the volt source is generated into
# MAKE_VOLT_PARAMS allows for per project configuration of make_volt call
# $(f)_VTP_DEPENDS is a space separated list of per font dependencies for volt compilation
# $(f)_VTP_SRC is the source volt code (if any) that make-volt pulls in
VOLT_template=<<EOT
$($(f)_VTP) : $($(f)_SRC) $($(f)_VTP_SRC)
	$(or $(indent $(.TAB),$(MAKE_VOLT)), make_volt $(and $($(f)_VTP_SRC),-i $($(f)_VTP_SRC)) $(MAKE_VOLT_PARAMS) $(and $($(f)_AP),-a $($(f)_AP)) $($(f)_SRC) > $@)

$($(f)_TARGET) :: $($(f)_VTP) $($(f)_VTP_DEPENDS)
	$(CP) $@ temp.ttf
	volt2ttf -t $($(f)_VTP) temp.ttf $@
	-$(RM) temp.ttf
EOT

# Graphite rules
# MAKE_GDL overrides the default make_gdl command
# MAKE_GDL_PARAMS extra parameters to pass to make_gdl (e.g. -l)
# $(f)_GDL_SHARED is the file included into the font .gdl file (if any)
# $(f)_GDL is the generated .gdl file that is compiled into the font. If not set, no graphite rules are included
# $(f)_GDL_DEPENDS is a space separated list of files that can trigger a grcompiler run
# GRCOMPILER the grcompiler command to run
# GRCOMPILER_PARAMS extra parameters to pass to grcompiler
GDL_template=<<EOT
$($(f)_GDL) : $($(f)_AP) $($(f)_SRC)
	$(or $(indent $(.TAB),$(MAKE_GDL)),make_gdl $(and $($(f)_GDL_SHARED),-i $($(f)_GDL_SHARED)) $(MAKE_GDL_PARAMS) $(and $($(f)_AP),-a $($(f)_AP)) $($(f)_SRC) $@)

$($(f)_TARGET) :: $($(f)_GDL) $($f)_GDL_SHARED) $($(f)_GDL_DEPENDS)
	-ttftable -d graphite $@ temp.ttf
	$(GRCOMPILER) $(GRCOMPILER_PARAMS) $($(f)_GDL) temp.ttf $@
	-$(RM) temp.ttf
EOT

# extra top level targets
# EXTRA_TARGETS lists top level default targets, space separated
# EXTRA_RULES is a way of adding extra targets to the makefile, along with their rules. Tabs needed
ALL_template=<<EOT
all :: $(EXTRA_TARGETS)

$(EXTRA_RULES)
EOT

# There are also extra font specific rules:
# $(f)_DEPENDS is a list of targets to add to the base build dependency for a font
# BUILD_TARGET is the list of command rules to run to build the base target font. No tabs needed
# $(f)_EXTRA_RULES is a way of adding extra font specific targets and rules. Tabs needed
PROGRAM_template=<<EOT
all :: $($(v)_TARGET)

$($(v)_TARGET) :: $($(v)_SRC) $($(v)_DEPENDS)
$(indent $(.TAB),$(BUILD_TARGET))

$($(v)_EXTRA_RULES)

$(and $($(v)_VTP),$(foreach f,$(v),$(VOLT_template)))

$(and $($(v)_GDL),$(foreach f,$(v),$(GDL_template)))

EOT

# Other useful variables
# EXTRA_DIST are files to distribute with the installer and the make dist
# EXTRA_SRC_DIST are extra files only to include in make dist
# LICENSE is the file that contains the product license information
# DESC_SHORT contains a one line description of the product
# COPYRIGHT contains a one line copyright statement
