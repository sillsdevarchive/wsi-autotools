FONTS=$(foreach f,$(FONTFACES),$(foreach s,$(FONTSTYLES),$(f)$(map $(s),regular,,bold,bold,light,light,italic,italic,bolditalic,bolditalic)))
FONT_VARS=$(!foreach v,$(FONTS),$(FONTVARS))

# various commands and their representation in various OSs
COMMANDS_MSWin32=<<EOT
RM=perl -MExtUtils::Command -e rm_rf
CP=perl -MExtUtils::Command -e cp
GRCOMPILER=$(or $(GRCOMPILER),'"C:\Program Files\SIL\GrCompiler\GrCompiler.exe"')
EOT

COMMANDS_linux=<<EOT
RM=rm
CP=cp
GRCOMPILER=grcompiler
GRCOMPILER=$(or $(GRCOMPILER),'"C:\Program Files\SIL\GrCompiler\GrCompiler.exe"')
EOT
$(!foreach v,dummy,$(COMMANDS_$(.OS)))

# standard files to include in MANIFEST
MANIFEST=<<EOT
$($(v)_SRC)
$($(v)_TARGET)
$($(v)_GDL)
$($(v)_VTP)
$($(v)_AP)
EOT

AUTOSUB=$(or $(AUTOSUB),perl bin/autosub -c $(CONFIG_FILE) -d . -x .cfg -x ~ templates)

# various make templates for smart font building
VOLT_template=<<EOT
$($(f)_VTP) : $($(f)_SRC) $($(f)_VTP_SRC)
	$(or $(indent $(.TAB),$(MAKE_VOLT)), make_volt -i $($(f)_VTP_SRC) $(MAKE_VOLT_PARAMS) $(and $($(f)_AP),-a $($(f)_AP)) $($(f)_SRC) > $@)

$($(f)_TARGET) :: $($(f)_VTP)
	$(CP) $@ temp.ttf
	volt2ttf -t $($(f)_VTP) temp.ttf $@
	$(RM) temp.ttf
EOT

GDL_template=<<EOT
$($(f)_GDL) : $($(f)_AP) $($(f)_SRC)
	$(or $(indent $(.TAB),$(MAKE_GDL)),make_gdl $(and $($(f)_GDL_SHARED),-i $($(f)_GDL_SHARED)) $(MAKE_GDL_PARAMS) $(and $($(f)_AP),-a $($(f)_AP)) $($(f)_SRC) $@)

$($(f)_TARGET) :: $($(f)_GDL) $($(f)_GDL_SHARED)
	ttftable -d graphite $@ temp.ttf
	$(GRCOMPILER) $(GRCOMPILER_PARMS) $($(f)_GDL) temp.ttf $@
	$(RM) temp.ttf
EOT

PROGRAM_template=<<EOT
all :: $($(v)_TARGET)

$($(v)_TARGET) :: $($(v)_SRC)
$(indent $(.TAB),$(BUILD_TARGET))

$(and $($(v)_VTP),$(foreach f,$(v),$(VOLT_template)))

$(and $($(v)_GDL),$(foreach f,$(v),$(GDL_template)))

EOT
